# Generated by Django 3.1.3 on 2021-06-23 22:31

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('ahj_app', '0010_ahjcensusname_stateprovince'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='address',
            options={'managed': True, 'verbose_name': 'Address', 'verbose_name_plural': 'Addresses'},
        ),
        migrations.AlterModelOptions(
            name='addresstype',
            options={'verbose_name': 'Address Type', 'verbose_name_plural': 'Address Types'},
        ),
        migrations.AlterModelOptions(
            name='ahj',
            options={'managed': True, 'verbose_name': 'AHJ', 'verbose_name_plural': 'AHJs'},
        ),
        migrations.AlterModelOptions(
            name='ahjcensusname',
            options={'verbose_name': 'AHJ Census Name', 'verbose_name_plural': 'AHJ Census Names'},
        ),
        migrations.AlterModelOptions(
            name='ahjdocumentsubmissionmethoduse',
            options={'managed': True, 'verbose_name': 'AHJ Document Submission Method Use', 'verbose_name_plural': 'AHJ Document Submission Method Uses'},
        ),
        migrations.AlterModelOptions(
            name='ahjinspection',
            options={'managed': True, 'verbose_name': 'AHJ Inspection', 'verbose_name_plural': 'AHJ Inspections'},
        ),
        migrations.AlterModelOptions(
            name='ahjlevelcode',
            options={'verbose_name': 'AHJ Level Code', 'verbose_name_plural': 'AHJ Level Codes'},
        ),
        migrations.AlterModelOptions(
            name='ahjpermitissuemethoduse',
            options={'managed': True, 'verbose_name': 'AHJ Permit Issue Method Use', 'verbose_name_plural': 'AHJ Permit Issue Method Uses'},
        ),
        migrations.AlterModelOptions(
            name='ahjusermaintains',
            options={'managed': True, 'verbose_name': 'AHJ User Maintains', 'verbose_name_plural': 'AHJ User Maintains'},
        ),
        migrations.AlterModelOptions(
            name='apitoken',
            options={'verbose_name': 'API Token', 'verbose_name_plural': 'API Tokens'},
        ),
        migrations.AlterModelOptions(
            name='buildingcode',
            options={'verbose_name': 'Building Code', 'verbose_name_plural': 'Building Codes'},
        ),
        migrations.AlterModelOptions(
            name='citypolygon',
            options={'managed': True, 'verbose_name': 'City Polygon', 'verbose_name_plural': 'City Polygons'},
        ),
        migrations.AlterModelOptions(
            name='citytemp',
            options={'verbose_name': 'Temporary City Polygon', 'verbose_name_plural': 'Temporary City Polygons'},
        ),
        migrations.AlterModelOptions(
            name='comment',
            options={'managed': True, 'verbose_name': 'Comment', 'verbose_name_plural': 'Comments'},
        ),
        migrations.AlterModelOptions(
            name='contact',
            options={'managed': True, 'verbose_name': 'Contact', 'verbose_name_plural': 'Contacts'},
        ),
        migrations.AlterModelOptions(
            name='contacttype',
            options={'verbose_name': 'Contact Type', 'verbose_name_plural': 'Contact Types'},
        ),
        migrations.AlterModelOptions(
            name='countypolygon',
            options={'managed': True, 'verbose_name': 'County Polygon', 'verbose_name_plural': 'County Polygons'},
        ),
        migrations.AlterModelOptions(
            name='countysubdivisionpolygon',
            options={'managed': True, 'verbose_name': 'County Subdivision Polygon', 'verbose_name_plural': 'County Subdivision Polygons'},
        ),
        migrations.AlterModelOptions(
            name='countytemp',
            options={'verbose_name': 'Temporary County Polygon', 'verbose_name_plural': 'Temporary County Polygons'},
        ),
        migrations.AlterModelOptions(
            name='cousubtemp',
            options={'verbose_name': 'Temporary Cousub Polygon', 'verbose_name_plural': 'Temporary Cousub Polygons'},
        ),
        migrations.AlterModelOptions(
            name='documentsubmissionmethod',
            options={'verbose_name': 'Document Submission Method', 'verbose_name_plural': 'Document Submission Methods'},
        ),
        migrations.AlterModelOptions(
            name='edit',
            options={'managed': True, 'verbose_name': 'Edit', 'verbose_name_plural': 'Edits'},
        ),
        migrations.AlterModelOptions(
            name='electriccode',
            options={'verbose_name': 'Electric Code', 'verbose_name_plural': 'Electric Codes'},
        ),
        migrations.AlterModelOptions(
            name='engineeringreviewrequirement',
            options={'managed': True, 'verbose_name': 'Engineering Review Requirement', 'verbose_name_plural': 'Engineering Review Requirements'},
        ),
        migrations.AlterModelOptions(
            name='engineeringreviewtype',
            options={'verbose_name': 'Engineering Review Type', 'verbose_name_plural': 'Engineering Review Types'},
        ),
        migrations.AlterModelOptions(
            name='feestructure',
            options={'managed': True, 'verbose_name': 'Fee Structure', 'verbose_name_plural': 'Fee Structures'},
        ),
        migrations.AlterModelOptions(
            name='feestructuretype',
            options={'verbose_name': 'Fee Structure Type', 'verbose_name_plural': 'Fee Structure Types'},
        ),
        migrations.AlterModelOptions(
            name='firecode',
            options={'verbose_name': 'Fire Code', 'verbose_name_plural': 'Fire Codes'},
        ),
        migrations.AlterModelOptions(
            name='inspectiontype',
            options={'verbose_name': 'Inspection Type', 'verbose_name_plural': 'Inspection Types'},
        ),
        migrations.AlterModelOptions(
            name='location',
            options={'managed': True, 'verbose_name': 'Location', 'verbose_name_plural': 'Locations'},
        ),
        migrations.AlterModelOptions(
            name='locationdeterminationmethod',
            options={'verbose_name': 'Location Determination Method', 'verbose_name_plural': 'Location Determination Methods'},
        ),
        migrations.AlterModelOptions(
            name='locationtype',
            options={'verbose_name': 'Location Type', 'verbose_name_plural': 'Location Types'},
        ),
        migrations.AlterModelOptions(
            name='permitissuemethod',
            options={'verbose_name': 'Permit Issue Method', 'verbose_name_plural': 'Permit Issue Methods'},
        ),
        migrations.AlterModelOptions(
            name='polygon',
            options={'managed': True, 'verbose_name': 'Polygon', 'verbose_name_plural': 'Polygons'},
        ),
        migrations.AlterModelOptions(
            name='preferredcontactmethod',
            options={'verbose_name': 'Preferred Contact Method', 'verbose_name_plural': 'Preferred Contact Methods'},
        ),
        migrations.AlterModelOptions(
            name='requirementlevel',
            options={'verbose_name': 'Requirement Level', 'verbose_name_plural': 'Requirement Levels'},
        ),
        migrations.AlterModelOptions(
            name='residentialcode',
            options={'verbose_name': 'Residential Code', 'verbose_name_plural': 'Residential Codes'},
        ),
        migrations.AlterModelOptions(
            name='stamptype',
            options={'verbose_name': 'Stamp Type', 'verbose_name_plural': 'Stamp Types'},
        ),
        migrations.AlterModelOptions(
            name='statepolygon',
            options={'managed': True, 'verbose_name': 'State Polygon', 'verbose_name_plural': 'State Polygons'},
        ),
        migrations.AlterModelOptions(
            name='statetemp',
            options={'verbose_name': 'Temporary State Polygon', 'verbose_name_plural': 'Temporary State Polygons'},
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'managed': True, 'verbose_name': 'User', 'verbose_name_plural': 'Users'},
        ),
        migrations.AlterModelOptions(
            name='webpagetoken',
            options={'verbose_name': 'Webpage Token', 'verbose_name_plural': 'Webpage Tokens'},
        ),
        migrations.AlterModelOptions(
            name='windcode',
            options={'verbose_name': 'Wind Code', 'verbose_name_plural': 'Wind Codes'},
        ),
        migrations.RemoveField(
            model_name='user',
            name='IsPeerReviewer',
        ),
        migrations.RemoveField(
            model_name='user',
            name='NumReviewsDone',
        ),
        migrations.AddField(
            model_name='apitoken',
            name='expires',
            field=models.DateTimeField(default=None, null=True, verbose_name='Expires'),
        ),
        migrations.AddField(
            model_name='apitoken',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='user',
            name='is_superuser',
            field=models.BooleanField(db_column='IsSuperuser', default=False),
        ),
        migrations.AlterField(
            model_name='edit',
            name='DateEffective',
            field=models.DateTimeField(blank=True, db_column='DateEffective', null=True),
        ),
        migrations.AlterField(
            model_name='edit',
            name='DateRequested',
            field=models.DateTimeField(db_column='DateRequested'),
        ),
        migrations.CreateModel(
            name='HistoricalWebpageToken',
            fields=[
                ('key', models.CharField(db_index=True, max_length=40, verbose_name='Key')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='Created')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'historical Webpage Token',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('UserID', models.IntegerField(blank=True, db_column='UserID', db_index=True)),
                ('Username', models.CharField(db_column='Username', db_index=True, max_length=254)),
                ('password', models.CharField(max_length=128)),
                ('Email', models.CharField(db_column='Email', db_index=True, max_length=254)),
                ('is_staff', models.BooleanField(db_column='IsStaff', default=False)),
                ('is_active', models.BooleanField(db_column='IsActive', default=False)),
                ('is_superuser', models.BooleanField(db_column='IsSuperuser', default=False)),
                ('SignUpDate', models.DateField(blank=True, db_column='SignUpDate')),
                ('PersonalBio', models.CharField(blank=True, db_column='PersonalBio', max_length=255)),
                ('URL', models.CharField(blank=True, db_column='URL', max_length=255, null=True)),
                ('CompanyAffiliation', models.CharField(blank=True, db_column='CompanyAffiliation', max_length=255)),
                ('Photo', models.CharField(blank=True, db_column='Photo', max_length=255, null=True)),
                ('AcceptedEdits', models.IntegerField(db_column='NumAcceptedEdits', default=0)),
                ('SubmittedEdits', models.IntegerField(db_column='NumSubmittedEdits', default=0)),
                ('CommunityScore', models.IntegerField(db_column='CommunityScore', default=0)),
                ('SecurityLevel', models.IntegerField(db_column='SecurityLevel', default=3)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('ContactID', models.ForeignKey(blank=True, db_column='ContactID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical User',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStateTemp',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('GEOID', models.CharField(max_length=2)),
                ('NAME', models.CharField(max_length=100)),
                ('ALAND', models.BigIntegerField()),
                ('AWATER', models.BigIntegerField()),
                ('INTPTLAT', models.CharField(max_length=11)),
                ('INTPTLON', models.CharField(max_length=12)),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Temporary State Polygon',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStatePolygon',
            fields=[
                ('FIPSCode', models.CharField(db_column='FIPSCode', max_length=2)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('PolygonID', models.ForeignKey(blank=True, db_column='PolygonID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.polygon')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical State Polygon',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPolygon',
            fields=[
                ('PolygonID', models.IntegerField(blank=True, db_column='PolygonID', db_index=True)),
                ('Name', models.CharField(db_column='Name', max_length=100)),
                ('GEOID', models.CharField(db_column='GEOID', max_length=10)),
                ('Polygon', django.contrib.gis.db.models.fields.MultiPolygonField(db_column='Polygon', srid=4326)),
                ('LandArea', models.BigIntegerField(db_column='LandArea')),
                ('WaterArea', models.BigIntegerField(db_column='WaterArea')),
                ('InternalPLatitude', models.DecimalField(db_column='InternalPLatitude', decimal_places=8, max_digits=10)),
                ('InternalPLongitude', models.DecimalField(db_column='InternalPLongitude', decimal_places=8, max_digits=11)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Polygon',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPermitIssueMethod',
            fields=[
                ('PermitIssueMethodID', models.IntegerField(blank=True, db_column='PermitIssueMethodID', db_index=True)),
                ('Value', models.CharField(choices=[('Epermitting', 'Epermitting'), ('Email', 'Email'), ('InPerson', 'In Person'), ('SolarApp', 'SolarAPP')], db_column='Value', db_index=True, max_length=11)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Permit Issue Method',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalLocation',
            fields=[
                ('LocationID', models.IntegerField(blank=True, db_column='LocationID', db_index=True)),
                ('Altitude', models.DecimalField(db_column='Altitude', decimal_places=6, max_digits=15, null=True)),
                ('Elevation', models.DecimalField(db_column='Elevation', decimal_places=8, max_digits=17, null=True)),
                ('Latitude', models.DecimalField(db_column='Latitude', decimal_places=8, max_digits=10, null=True)),
                ('Longitude', models.DecimalField(db_column='Longitude', decimal_places=8, max_digits=11, null=True)),
                ('Description', models.CharField(blank=True, db_column='Description', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('LocationDeterminationMethod', models.ForeignKey(blank=True, db_column='LocationDeterminationMethod', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.locationdeterminationmethod')),
                ('LocationType', models.ForeignKey(blank=True, db_column='LocationType', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.locationtype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Location',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFeeStructure',
            fields=[
                ('FeeStructurePK', models.IntegerField(blank=True, db_column='FeeStructurePK', db_index=True)),
                ('FeeStructureID', models.CharField(db_column='FeeStructureID', max_length=36)),
                ('FeeStructureName', models.CharField(db_column='FeeStructureName', db_index=True, max_length=255)),
                ('Description', models.CharField(blank=True, db_column='Description', max_length=255)),
                ('FeeStructureStatus', models.BooleanField(db_column='FeeStructureStatus', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AHJPK', models.ForeignKey(blank=True, db_column='AHJPK', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.ahj')),
                ('FeeStructureType', models.ForeignKey(blank=True, db_column='FeeStructureType', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.feestructuretype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Fee Structure',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEngineeringReviewRequirement',
            fields=[
                ('EngineeringReviewRequirementID', models.IntegerField(blank=True, db_column='EngineeringReviewRequirementID', db_index=True)),
                ('Description', models.CharField(blank=True, db_column='Description', max_length=255)),
                ('RequirementNotes', models.CharField(blank=True, db_column='RequirementNotes', max_length=255)),
                ('EngineeringReviewRequirementStatus', models.BooleanField(db_column='EngineeringReviewRequirementStatus', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AHJPK', models.ForeignKey(blank=True, db_column='AHJPK', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.ahj')),
                ('EngineeringReviewType', models.ForeignKey(blank=True, db_column='EngineeringReviewType', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.engineeringreviewtype')),
                ('RequirementLevel', models.ForeignKey(blank=True, db_column='RequirementLevel', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.requirementlevel')),
                ('StampType', models.ForeignKey(blank=True, db_column='StampType', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.stamptype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Engineering Review Requirement',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEdit',
            fields=[
                ('EditID', models.IntegerField(blank=True, db_column='EditID', db_index=True)),
                ('SourceTable', models.CharField(db_column='SourceTable', max_length=255)),
                ('SourceColumn', models.CharField(db_column='SourceColumn', max_length=255)),
                ('SourceRow', models.IntegerField(db_column='SourceRow')),
                ('ReviewStatus', models.CharField(db_column='ReviewStatus', default='P', max_length=1)),
                ('OldValue', models.CharField(blank=True, db_column='OldValue', max_length=255, null=True)),
                ('NewValue', models.CharField(blank=True, db_column='NewValue', max_length=255, null=True)),
                ('DateRequested', models.DateTimeField(db_column='DateRequested')),
                ('DateEffective', models.DateTimeField(blank=True, db_column='DateEffective', null=True)),
                ('EditType', models.CharField(db_column='EditType', default='U', max_length=1)),
                ('DataSourceComment', models.CharField(blank=True, db_column='DataSourceComment', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AHJPK', models.ForeignKey(blank=True, db_column='AHJPK', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.ahj')),
                ('ApprovedBy', models.ForeignKey(blank=True, db_column='ApprovedBy', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('ChangedBy', models.ForeignKey(blank=True, db_column='ChangedBy', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Edit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDocumentSubmissionMethod',
            fields=[
                ('DocumentSubmissionMethodID', models.IntegerField(blank=True, db_column='DocumentSubmissionMethodID', db_index=True)),
                ('Value', models.CharField(choices=[('Epermitting', 'Epermitting'), ('Email', 'Email'), ('InPerson', 'In Person'), ('SolarApp', 'SolarAPP')], db_column='Value', db_index=True, max_length=11)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Document Submission Method',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCousubTemp',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('STATEFP', models.CharField(max_length=2)),
                ('GEOID', models.CharField(max_length=10)),
                ('NAME', models.CharField(max_length=100)),
                ('NAMELSAD', models.CharField(max_length=100)),
                ('ALAND', models.BigIntegerField()),
                ('AWATER', models.BigIntegerField()),
                ('INTPTLAT', models.CharField(max_length=11)),
                ('INTPTLON', models.CharField(max_length=12)),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Temporary Cousub Polygon',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCountyTemp',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('STATEFP', models.CharField(max_length=2)),
                ('GEOID', models.CharField(max_length=5)),
                ('NAME', models.CharField(max_length=100)),
                ('NAMELSAD', models.CharField(max_length=100)),
                ('ALAND', models.BigIntegerField()),
                ('AWATER', models.BigIntegerField()),
                ('INTPTLAT', models.CharField(max_length=11)),
                ('INTPTLON', models.CharField(max_length=12)),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Temporary County Polygon',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCountySubdivisionPolygon',
            fields=[
                ('LSAreaCodeName', models.CharField(db_column='LSAreaCodeName', max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('PolygonID', models.ForeignKey(blank=True, db_column='PolygonID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.polygon')),
                ('StatePolygonID', models.ForeignKey(blank=True, db_column='StatePolygonID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.statepolygon')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical County Subdivision Polygon',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCountyPolygon',
            fields=[
                ('LSAreaCodeName', models.CharField(db_column='LSAreaCodeName', max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('PolygonID', models.ForeignKey(blank=True, db_column='PolygonID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.polygon')),
                ('StatePolygonID', models.ForeignKey(blank=True, db_column='StatePolygonID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.statepolygon')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical County Polygon',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContact',
            fields=[
                ('ParentTable', models.CharField(blank=True, db_column='ParentTable', max_length=255)),
                ('ParentID', models.IntegerField(db_column='ParentID', null=True)),
                ('ContactID', models.IntegerField(blank=True, db_column='ContactID', db_index=True)),
                ('FirstName', models.CharField(blank=True, db_column='FirstName', max_length=255)),
                ('MiddleName', models.CharField(blank=True, db_column='MiddleName', max_length=255)),
                ('LastName', models.CharField(blank=True, db_column='LastName', max_length=255)),
                ('HomePhone', models.CharField(blank=True, db_column='HomePhone', max_length=31)),
                ('MobilePhone', models.CharField(blank=True, db_column='MobilePhone', max_length=31)),
                ('WorkPhone', models.CharField(blank=True, db_column='WorkPhone', max_length=31)),
                ('ContactTimezone', models.CharField(blank=True, db_column='ContactTimezone', max_length=255)),
                ('Description', models.CharField(blank=True, db_column='Description', max_length=255)),
                ('Email', models.CharField(blank=True, db_column='Email', max_length=50)),
                ('Title', models.CharField(blank=True, db_column='Title', max_length=255)),
                ('URL', models.CharField(blank=True, db_column='URL', max_length=255)),
                ('ContactStatus', models.BooleanField(db_column='ContactStatus', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AddressID', models.ForeignKey(blank=True, db_column='AddressID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.address')),
                ('ContactType', models.ForeignKey(blank=True, db_column='ContactType', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.contacttype')),
                ('PreferredContactMethod', models.ForeignKey(blank=True, db_column='PreferredContactMethod', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.preferredcontactmethod')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Contact',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalComment',
            fields=[
                ('CommentID', models.IntegerField(blank=True, db_column='CommentID', db_index=True)),
                ('CommentText', models.TextField(blank=True, db_column='CommentText', null=True)),
                ('AHJPK', models.IntegerField(db_column='AHJPK', null=True)),
                ('Date', models.DateTimeField(db_column='Date', default=django.utils.timezone.now)),
                ('ReplyingTo', models.IntegerField(db_column='ReplyingTo', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('UserID', models.ForeignKey(blank=True, db_column='UserID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Comment',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCityTemp',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('STATEFP', models.CharField(max_length=2)),
                ('GEOID', models.CharField(max_length=7)),
                ('NAME', models.CharField(max_length=100)),
                ('NAMELSAD', models.CharField(max_length=100)),
                ('ALAND', models.BigIntegerField()),
                ('AWATER', models.BigIntegerField()),
                ('INTPTLAT', models.CharField(max_length=11)),
                ('INTPTLON', models.CharField(max_length=12)),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Temporary City Polygon',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCityPolygon',
            fields=[
                ('LSAreaCodeName', models.CharField(db_column='LSAreaCodeName', max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('PolygonID', models.ForeignKey(blank=True, db_column='PolygonID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.polygon')),
                ('StatePolygonID', models.ForeignKey(blank=True, db_column='StatePolygonID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.statepolygon')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical City Polygon',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAPIToken',
            fields=[
                ('key', models.CharField(db_index=True, max_length=40, verbose_name='Key')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='Created')),
                ('expires', models.DateTimeField(default=None, null=True, verbose_name='Expires')),
                ('is_active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'historical API Token',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAHJUserMaintains',
            fields=[
                ('MaintainerID', models.IntegerField(blank=True, db_column='MaintainerID', db_index=True)),
                ('MaintainerStatus', models.BooleanField(db_column='MaintainerStatus')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AHJPK', models.ForeignKey(blank=True, db_column='AHJPK', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.ahj')),
                ('UserID', models.ForeignKey(blank=True, db_column='UserID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical AHJ User Maintains',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAHJPermitIssueMethodUse',
            fields=[
                ('UseID', models.IntegerField(blank=True, db_column='UseID', db_index=True)),
                ('MethodStatus', models.BooleanField(db_column='MethodStatus', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AHJPK', models.ForeignKey(blank=True, db_column='AHJPK', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.ahj')),
                ('PermitIssueMethodID', models.ForeignKey(blank=True, db_column='PermitIssueMethodID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.permitissuemethod')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical AHJ Permit Issue Method Use',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAHJInspection',
            fields=[
                ('InspectionID', models.IntegerField(blank=True, db_column='InspectionID', db_index=True)),
                ('AHJInspectionName', models.CharField(db_column='AHJInspectionName', max_length=255)),
                ('AHJInspectionNotes', models.CharField(blank=True, db_column='AHJInspectionNotes', max_length=255)),
                ('Description', models.CharField(blank=True, db_column='Description', max_length=255)),
                ('FileFolderURL', models.CharField(blank=True, db_column='FileFolderURL', max_length=255)),
                ('TechnicianRequired', models.BooleanField(db_column='TechnicianRequired', null=True)),
                ('InspectionStatus', models.BooleanField(db_column='InspectionStatus', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AHJPK', models.ForeignKey(blank=True, db_column='AHJPK', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.ahj')),
                ('InspectionType', models.ForeignKey(blank=True, db_column='InspectionType', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.inspectiontype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical AHJ Inspection',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAHJDocumentSubmissionMethodUse',
            fields=[
                ('UseID', models.IntegerField(blank=True, db_column='UseID', db_index=True)),
                ('MethodStatus', models.BooleanField(db_column='MethodStatus', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AHJPK', models.ForeignKey(blank=True, db_column='AHJPK', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.ahj')),
                ('DocumentSubmissionMethodID', models.ForeignKey(blank=True, db_column='DocumentSubmissionMethodID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.documentsubmissionmethod')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical AHJ Document Submission Method Use',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAHJCensusName',
            fields=[
                ('AHJCensusName', models.CharField(db_column='AHJCensusName', max_length=100)),
                ('StateProvince', models.CharField(db_column='StateProvince', max_length=2)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AHJPK', models.ForeignKey(blank=True, db_column='AHJPK', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.ahj')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical AHJ Census Name',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAHJ',
            fields=[
                ('AHJPK', models.IntegerField(blank=True, db_column='AHJPK', db_index=True)),
                ('AHJID', models.CharField(db_column='AHJID', db_index=True, max_length=36)),
                ('AHJCode', models.CharField(blank=True, db_column='AHJCode', max_length=20)),
                ('AHJName', models.CharField(db_column='AHJName', max_length=100)),
                ('Description', models.CharField(blank=True, db_column='Description', max_length=255)),
                ('DocumentSubmissionMethodNotes', models.CharField(blank=True, db_column='DocumentSubmissionMethodNotes', max_length=255)),
                ('PermitIssueMethodNotes', models.CharField(blank=True, db_column='PermitIssueMethodNotes', max_length=255)),
                ('EstimatedTurnaroundDays', models.IntegerField(db_column='EstimatedTurnaroundDays', null=True)),
                ('FileFolderURL', models.CharField(blank=True, db_column='FileFolderURL', max_length=255)),
                ('URL', models.CharField(blank=True, db_column='URL', max_length=2048)),
                ('BuildingCodeNotes', models.CharField(blank=True, db_column='BuildingCodeNotes', max_length=255)),
                ('ElectricCodeNotes', models.CharField(blank=True, db_column='ElectricCodeNotes', max_length=255)),
                ('FireCodeNotes', models.CharField(blank=True, db_column='FireCodeNotes', max_length=255)),
                ('ResidentialCodeNotes', models.CharField(blank=True, db_column='ResidentialCodeNotes', max_length=255)),
                ('WindCodeNotes', models.CharField(blank=True, db_column='WindCodeNotes', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AHJLevelCode', models.ForeignKey(blank=True, db_column='AHJLevelCode', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.ahjlevelcode')),
                ('AddressID', models.ForeignKey(blank=True, db_column='AddressID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.address')),
                ('BuildingCode', models.ForeignKey(blank=True, db_column='BuildingCode', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.buildingcode')),
                ('ElectricCode', models.ForeignKey(blank=True, db_column='ElectricCode', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.electriccode')),
                ('FireCode', models.ForeignKey(blank=True, db_column='FireCode', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.firecode')),
                ('PolygonID', models.ForeignKey(blank=True, db_column='PolygonID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.polygon')),
                ('ResidentialCode', models.ForeignKey(blank=True, db_column='ResidentialCode', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.residentialcode')),
                ('WindCode', models.ForeignKey(blank=True, db_column='WindCode', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.windcode')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical AHJ',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAddress',
            fields=[
                ('AddressID', models.IntegerField(blank=True, db_column='AddressID', db_index=True)),
                ('AddrLine1', models.CharField(blank=True, db_column='AddrLine1', max_length=100)),
                ('AddrLine2', models.CharField(blank=True, db_column='AddrLine2', max_length=100)),
                ('AddrLine3', models.CharField(blank=True, db_column='AddrLine3', max_length=100)),
                ('City', models.CharField(blank=True, db_column='City', max_length=100)),
                ('Country', models.CharField(blank=True, db_column='Country', max_length=100)),
                ('County', models.CharField(blank=True, db_column='County', max_length=100)),
                ('StateProvince', models.CharField(blank=True, db_column='StateProvince', max_length=100)),
                ('ZipPostalCode', models.CharField(blank=True, db_column='ZipPostalCode', max_length=100)),
                ('Description', models.CharField(blank=True, db_column='Description', max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('AddressType', models.ForeignKey(blank=True, db_column='AddressType', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.addresstype')),
                ('LocationID', models.ForeignKey(blank=True, db_column='LocationID', db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='ahj_app.location')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
